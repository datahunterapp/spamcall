import telebot
import requests
import time
from keep_alive import keep_alive
keep_alive()

# Initialize your Telegram bot with the token you obtained from BotFather
bot = telebot.TeleBot("6891639487:AAHXiGM2tumJSwuYe0ydtSYQkypPE4ZnEeY")
running = True
def make_call(phone_number,message):
    url = "https://sms-call.vercel.app/api/call"
    payload = {
        "phone": phone_number
    }
    try:
        response = requests.post(url, json=payload)
        if response.json()['message'] == 'sent':
            print(f"Call made to {phone_number} successfully!")
            bot.reply_to(message, f"Calls sent successfully to {phone_number}")
        else:
            print(f"Failed to make call to {phone_number}. Status code: {response.status_code}")
            bot.reply_to(message, f"Failed to make call to {phone_number}. error is: {response.json()['message']}")
    except requests.exceptions.RequestException as e:
        print(f"Error occurred while making call to {phone_number}: {e}")
        bot.reply_to(message, f"Error occurred while making call to {phone_number}: {e}")

def make_calls(phone_numbers,message):
    global running
    for number in phone_numbers:
        if not running:
            break  
        make_call(number,message)
        time.sleep(2)

# Handle "/send" command from Telegram
@bot.message_handler(commands=['send'])
def send_messages(message):

    # Example list of phone numbers
    bot.reply_to(message, "Sending......")
    global running
    running = True
    phone_numbers = [
'01159015092','01005258300','01141904182', '01101322529', '01144582774', '01207896463', '01001627450', '01552723175', '01050785759', '01063075495', '01113627975', '01212484146', '01101391715', '01063818927', '01067357476', '01010622718', '01156954028', '01205632766', '01144753704', '01050542336', '01062619745', '01010662567', '01227356065', '01121374722', '01276804098', '01126211659', '01154669520', '01015914094', '01141305067', '01032117812', '01210629188', '01032430197', '01288579696', '01064524404', '01014490590', '01015103916', '01027546387', '01204945998', '01143484067', '01207410725', '01063279527', '01287600577', '01156501103', '01203860940', '01021350400', '01110451801', '01032002962', '01123034659', '01064422819', '01014714736', '01270411954', '01141656497', '01011029068', '01118348939', '01098211641', '01062907552', '01141676814', '01099427585', '01112587640', '01010416325', '01554555715', '01272554934', '01095426435', '01281859862', '01115525850', '01063486216', '01204872674', '01092039174', '01104169818', '01158405478', '01028406508', '01116543379', '01026880548', '01147519789', '01210404152', '01124901447', '01000917987', '01270378002', '01050883534', '01274593178', '01223007357', '01026619459', '01228567642', '01146026712', '01113409100', '01021215983', '01063761346', '01552072879', '01067271455', '01001383082', '01068724880', '01066784960', '01092132596', '01019279897', '01224293754', '01282789951', '01159232669', '01023201714', '01271381964', '01015008653', '01282001839', '01114916311', '01029791277', '01223598926', '01280549289', '01154293996', '01099655149', '01550209168', '01155607992', '01024671837', '01032979275', '01111990096', '01068707902', '01158956773', '01006198389', '01223862809', '01278534177', '01128851396', '01557561237', '01123452948', '01114723681', '01115639038', '01028394347', '01102318875', 
'01013218769', '01212344248', '01102243283', '01002373685', '01002963151', '01558466279', '01157738666', '01147055221', '01022748917', '01203029615', '01128407895', '01210890201', '01095761662', '01017158823', '01203194466', '01114672418', '01229498863', '01069615620', '01096877384', '01200757524', '01205173903', '01114096471', '01063048023', '01098695831', '01201675858', '01026065721', '01019839144', '01145331060', '01064460839', '01279184803', '01159308632','01225433838', '01121168603', '01211703837', '01008818620', '01272183002', '01206382003', '01015786602', '01097163475', '01551326281', '01277940809', '01113991726', '01220479088', '01158176446', '01153409027', '01020635115', '01001181596', '01207219870', '01028500798', '01067669860', '01011983072', '01203972188', '01032636533', '01015931500', '01016104535', '01287332955', '01063397944', '01204654078', '01147239364', '01009841306', '01551105694', '01147377808', '01271191209', '01286828959', '01027592030', '01003945425', '01003971295', '01005582641', '01006134659', '01007840645', '01009384972', '01010275023', '01011240750', '01011938355', '01012665040', '01016793588', '01017012033', '01019633272', '01022551458', '01023372767', '01024041084', '01025142387', '01025640389', '01027699543', '01027799469', '01028616389', '01029075351', '01029169863', '01029294604', '01029959476', '01030397158', '01030665989', '01032153540', '01061573191', '01061821314', '01063980172', '01066171165', '01066803048', '01067804053', '01067957966', '01068988663', '01070120435', '01080250866', '01091198567', '01091553965', '01092429973', '01094452071', '01096539754', '01097011113', '01097334640', '01098001351', '01102215579', '01112804130', '01113195508', '01114566381', '01121292593', '01123907634', '01126183142', '01127050491', '01129781129', '01140551346', '01142452803', '01144452480', '01144727341', '01145748138', '01146018054', '01158184741', '01206336059', '01207538309', '01207987024', '01208229387', '01211917565', '01221412306', '01226207536', '01226245093', '01226251568', '01226804672', '01228735009', '01271253571', '01272876968', '01273519150', '01275384132', 
'01278138175', '01278552296', '01278906313', '01280905496', '01281468592', '01281516399', '01285184473', '01287545494', '01553443474', '01553531417', '01554027004', '01557026302', '01094247324', '01026163391', '01013365415', '01090609279', '01211636065', '01226280057', '01063058953', '01276537341', '01210570202', '01024885893', '01150705410', '01002557526', '01006818808', '01023240267', '01226806620', '01063398737', '01221657493', '01128909460', '01210204326', '01091548591', '01097203197', '01060570332', '01555330635', '01271508964', '01018130244', '01204924304', '01111087526', '01154762807', '01212988133', '01067727606', '01003406308', '01203705611', '01030162459', '01067786267', '01212394583', '01118297866', '01008491635', '01093504160', '01229245489', '01121016609', '01278113117', '01008359142', '01017536200', '01033939828', '01080517606', '01120516538', '01127721849', '01128587223', '01142755261', '01203694581', '01206470850', '01224913770', '01227860312', '01271382350', '01551519750', '01159015092']
    make_calls(phone_numbers,message)
    bot.reply_to(message, "Done sent calls successfully!")
@bot.message_handler(commands=['start'])
def send_messages(message):

    bot.reply_to(message, "/send دوس هنا عشان تبعت المكالمات ")

@bot.message_handler(commands=['stop'])
def stop_messages(message):
    global running
    running = False
    bot.reply_to(message, "Send Call stopped!")

# Start the bot
bot.polling()


